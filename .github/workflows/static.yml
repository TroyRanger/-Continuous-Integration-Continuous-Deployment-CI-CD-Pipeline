name: Hello World CI/CD

on:
  push:
    branches:
      - main  # Adjust this to match your main branch name

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build Docker Image
        working-directory: F:\helloworldwebapp\-Continuous-Integration-Continuous-Deployment-CI-CD-Pipeline\  # Update this to your Dockerfile directory
        run: |
          docker build -t hello-world-web-app:latest .
          docker images  # Display a list of Docker images for verification


  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Start Docker Container for Testing
        run: |
          docker run -d -p 8080:80 --name hello-world-container hello-world-web-app:latest
          sleep 5  # Give the container some time to start

      - name: Run Tests (Example)
        run: |
          # You can add your testing commands here.
          # For a "Hello, World!" app, you might not have extensive tests.
          # This is a placeholder for your specific testing requirements.

      - name: Stop Docker Container
        run: |
          docker stop hello-world-container
          docker rm hello-world-container

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Start Docker Container for Deployment
        run: |
          docker run -d -p 8080:80 --name hello-world-container hello-world-web-app:latest
          sleep 5  # Give the container some time to start

      - name: Deploy to Localhost (Example)
        run: |
          # You can add deployment commands here.
          # For a local deployment, this might involve copying files or configuring a local web server.
          # This is a placeholder for your specific deployment requirements.

      - name: Stop Docker Container
        run: |
          docker stop hello-world-container
          docker rm hello-world-container
